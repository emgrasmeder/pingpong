@model pingpong.Models.Game

@{
    ViewData["Title"] = "Create New Game";
    ViewData["ModelName"] = "Game";
}

<h1>@ViewData["Title"]</h1>

<h4>@ViewData["ModelName"]</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="GameDate" class="control-label"></label>
                <input asp-for="GameDate" class="form-control" />
                <span asp-validation-for="GameDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HomeTeam" class="control-label"></label>
                <input asp-for="HomeTeam" class="form-control" />
                <span asp-validation-for="HomeTeam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AwayTeam" class="control-label"></label>
                <input asp-for="AwayTeam" class="form-control" />
                <span asp-validation-for="AwayTeam" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


<div class="form-group">
    <form method="get" action="@Url.Action("Match", "Players")">
        <label for="search">Search</label>
        <input type="text" name="q" id="search" />
        <button type="submit">Perform search</button>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
